# 자료형

# 자료와 처리. 프로그램이 처리할 수 있는 모든 것: 자료, 게임에서 경험치를 얻었다면 경험치는 자료이고, 경험치를 증가시키는 것은 처리,
# 레벨 업은 결과
# 자료형-문자열, 숫자, 불, 등. 문자열: "안녕하세요", 숫자: 273, 불: True, False
# 자료형 확인하기 by type(): ()가 붙었으므로 이는 함수임을 알 수 있다.
print(type("안녕하세요")) 
# <class 'str'>
print(type(273))
# <class 'int'> 
print(type(273.1))
# <class 'float'>
# str: string(문자열), int: integer(정수)
""
print("안녕하세요")
print('안녕하세요')
# print(""안녕하세요"라고 말했다."): 구문 오류 (""이 큰 따옴표 안의 문자열 만을 인식하므로 '안녕하세요'는 인식하지 않음)
print('"안녕하세요"라고 말했다.')
# 구문 오류(syntax error): 작 성한 코드에 뭔가 오류가 있어서 아예 실행조차 되지 않는다는 것을 의미함                             
# 이스케이프 문자(\):역슬래시(\)기호와 함께 조합해서 사용하는 특수 문자로 \"는 큰따옴표를, \'는 작은따옴표를 의미한다.
print("\"안녕하세요\"라고 말했다.")
# ""내부에 또다시 큰따옴표를 쓸 때에 이스케이프 문자(\")를 활용한다.
# \n: 줄바꿈, \t: 탭
print("A", "\nB", "\tC" )
# 탭 이스케이프 문자(\t)는 글자들을 표 형식으로 출력할 때 많이 사용한다.
# string_operator.py
# \\: 역슬래시(\)를 의미한다.
print("\\")         # \
print("\\\\\\\\")   # \\\\
# \n: 줄바꿈 이스케이프 문자 -> 여러 줄 문자열(""" """)을 사용하여 대체 가능 -->가독성이 좋음
print("AB\nCD")
print("""
qwkjqwe
      qwoeiqoe
      qwejk""") 
print("""AB
CD""")
print("""
AB
CD
""")
# 위 방법은 결괏값에 의도치 않은 줄바꿈이 들어간다. print("""AB
# CD""") = print("""\
# AB
# CD\
# """)
str1 = "나는"; str2= "정세현입니다."

# 문자열 연산자: 각각의 자료(숫자, 집합, 명제)에는 그에 맞는 연산자가 있다.
# 문자열 연결 연산자: +  / "문자열" + "문자열"   / 이는 숫자 더하기 연산자와는 다른 수행을 한다.
print("안녕" + "하세요")    # 안녕하세요
# print("안녕하세요" + 1)_TypeError: can only concatenate str (not "int") to str
# 문자열 반복 연산자: *  / "문자열" * 숫자
print("안녕하세요" * 3)     # 안녕하세요안녕하세요안녕하세요
# 문자 선택 연산자(인덱싱): []   / "문자열"[숫자]    / 숫자는 문자열 내에서 문자의 위치를 지정하며, 이 숫자를 인덱스라 한다.
# 파이썬은 '제로 인덱스' 유형을 사용하는 언어이다.  / 제로 인덱스란 숫자를 0부터 세는 유형이다.
# string_operator01.py
# 문자열 범위 선택 연산자(슬라이싱): [:] / "문자열"[숫자:숫자]   / 프로그래밍 언어에 따라 범위 지정 시 '마지막 숫자를 포함'과 
# '마지막 숫자를 포함하지 않음'이 있다. 파이썬은 '마지막 숫자를 포함하지 않음'으로 적용한다.
print("안녕하세요"[1:4])    # 녕하세
print("안녕하세요"[0:2])    # 안녕
print("안녕하세요"[1:-1])   # 녕하세
# [숫자:]: "숫자"부터 끝의 문자까지 선택, [:숫자]: 0번째부터 "숫자"번째 앞의 문자까지 선택
print("안녕하세요"[2:]) # 하세요
print("안녕하세요"[:4]) # 안녕하세
# []연산자: 문자열의 특정 위치에 있는 문자 참조(인덱싱), [:]연산자: 문자열의 일부를 추출하는 것(슬라이싱)
# IndexError(index out of error) 예외: 리스트, 문자열의 수를 넘는 요소, 글자를 선택할 때 발생    /string_operator01.py 참조
# print("안녕하세요"[5])_IndexError: string index out of range

# 문자열의 길이: len()   /식별자 뒤에 괄호가 있으므로 이는 함수이다.
print(len("안녕하세요"))    # 5  / 함수가 이중으로 사용되었을 때에는 안쪽부터 실행된다. print(len("안녕하세요")) -> print(5) -> 5